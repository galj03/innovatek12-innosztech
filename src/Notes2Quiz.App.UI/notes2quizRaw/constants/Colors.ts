/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const tintColorLight = '#0a7ea4';
const tintColorDark = '#fff';

export const Colors = {
    light: {
      primary: "rgb(185, 12, 85)",
      onPrimary: "rgb(255, 255, 255)",
      primaryContainer: "rgb(255, 217, 223)",
      onPrimaryContainer: "rgb(63, 0, 24)",
      secondary: "rgb(121, 89, 0)",
      onSecondary: "rgb(255, 255, 255)",
      secondaryContainer: "rgb(255, 223, 160)",
      onSecondaryContainer: "rgb(38, 26, 0)",
      tertiary: "rgb(150, 73, 0)",
      onTertiary: "rgb(255, 255, 255)",
      tertiaryContainer: "rgb(255, 220, 198)",
      onTertiaryContainer: "rgb(49, 19, 0)",
      error: "rgb(186, 26, 26)",
      onError: "rgb(255, 255, 255)",
      errorContainer: "rgb(255, 218, 214)",
      onErrorContainer: "rgb(65, 0, 2)",
      background: "rgb(255, 251, 255)",
      onBackground: "rgb(32, 26, 27)",
      surface: "rgb(255, 251, 255)",
      onSurface: "rgb(32, 26, 27)",
      surfaceVariant: "rgb(243, 221, 224)",
      onSurfaceVariant: "rgb(82, 67, 70)",
      outline: "rgb(132, 115, 117)",
      outlineVariant: "rgb(214, 194, 196)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(53, 47, 48)",
      inverseOnSurface: "rgb(250, 238, 239)",
      inversePrimary: "rgb(255, 177, 194)",
      elevation: {
        level0: "transparent",
        level1: "rgb(252, 239, 247)",
        level2: "rgb(249, 232, 241)",
        level3: "rgb(247, 225, 236)",
        level4: "rgb(247, 222, 235)",
        level5: "rgb(245, 218, 231)"
      },
      surfaceDisabled: "rgba(32, 26, 27, 0.12)",
      onSurfaceDisabled: "rgba(32, 26, 27, 0.38)",
      backdrop: "rgba(58, 45, 47, 0.4)"
    }
,
  dark: {
    primary: "rgb(255, 181, 160)",
    onPrimary: "rgb(96, 21, 0)",
    primaryContainer: "rgb(135, 33, 0)",
    onPrimaryContainer: "rgb(255, 219, 209)",
    secondary: "rgb(150, 204, 255)",
    onSecondary: "rgb(0, 51, 83)",
    secondaryContainer: "rgb(0, 74, 117)",
    onSecondaryContainer: "rgb(206, 229, 255)",
    tertiary: "rgb(248, 189, 42)",
    onTertiary: "rgb(64, 45, 0)",
    tertiaryContainer: "rgb(92, 67, 0)",
    onTertiaryContainer: "rgb(255, 223, 160)",
    error: "rgb(255, 180, 171)",
    onError: "rgb(105, 0, 5)",
    errorContainer: "rgb(147, 0, 10)",
    onErrorContainer: "rgb(255, 180, 171)",
    background: "rgb(32, 26, 24)",
    onBackground: "rgb(237, 224, 221)",
    surface: "rgb(32, 26, 24)",
    onSurface: "rgb(237, 224, 221)",
    surfaceVariant: "rgb(83, 67, 63)",
    onSurfaceVariant: "rgb(216, 194, 188)",
    outline: "rgb(160, 140, 135)",
    outlineVariant: "rgb(83, 67, 63)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(237, 224, 221)",
    inverseOnSurface: "rgb(54, 47, 45)",
    inversePrimary: "rgb(176, 46, 0)",
    elevation: {
      level0: "transparent",
      level1: "rgb(43, 34, 31)",
      level2: "rgb(50, 38, 35)",
      level3: "rgb(57, 43, 39)",
      level4: "rgb(59, 45, 40)",
      level5: "rgb(63, 48, 43)",
    },
    surfaceDisabled: "rgba(237, 224, 221, 0.12)",
    onSurfaceDisabled: "rgba(237, 224, 221, 0.38)",
    backdrop: "rgba(59, 45, 41, 0.4)",
  }
};
